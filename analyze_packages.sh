#!/bin/bash

# Package dependency analyzer for OpenMandriva
# This script helps identify which packages are dependencies vs explicit installs

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

print_header() {
    echo -e "${BLUE}========================================${NC}"
    echo -e "${BLUE}$1${NC}"
    echo -e "${BLUE}========================================${NC}"
}

print_section() {
    echo -e "\n${CYAN}--- $1 ---${NC}"
}

# Check if packages.txt exists
if [[ ! -f "packages.txt" ]]; then
    echo -e "${RED}Error: packages.txt not found!${NC}"
    exit 1
fi

print_header "OpenMandriva Package Dependency Analyzer"

# Extract just package names (remove version info)
echo -e "${YELLOW}Extracting package names...${NC}"
grep -v '^[[:space:]]*$' packages.txt | \
awk '{print $1}' | \
sed 's/-[0-9].*//' | \
sort -u > /tmp/package_names.txt

total_packages=$(wc -l < /tmp/package_names.txt)
echo -e "${GREEN}Found $total_packages unique packages${NC}"

# Create output files
> /tmp/likely_dependencies.txt
> /tmp/explicit_packages.txt
> /tmp/system_packages.txt
> /tmp/application_packages.txt

print_section "Analyzing Package Categories"

# Read through each package and categorize
while IFS= read -r package; do
    [[ -z "$package" ]] && continue
    
    # Skip lib packages (likely dependencies)
    if [[ "$package" =~ ^lib64 ]]; then
        echo "$package" >> /tmp/likely_dependencies.txt
        continue
    fi
    
    # System/base packages (likely dependencies or base system)
    if [[ "$package" =~ ^(basesystem|glibc|kernel|systemd|rpm|dnf|locales|setup|filesystem|rootfiles|distro-release) ]]; then
        echo "$package" >> /tmp/system_packages.txt
        continue
    fi
    
    # Development packages (might be dependencies)
    if [[ "$package" =~ (-devel|-dev|-headers|^perl-|^python-) ]]; then
        echo "$package" >> /tmp/likely_dependencies.txt
        continue
    fi
    
    # Font packages (usually dependencies)
    if [[ "$package" =~ (^fonts-|^font|^lib.*font) ]]; then
        echo "$package" >> /tmp/likely_dependencies.txt
        continue
    fi
    
    # Qt/KDE framework libraries (dependencies)
    if [[ "$package" =~ ^(kf6-|qt6-|lib.*qt|lib.*KF6) ]]; then
        echo "$package" >> /tmp/likely_dependencies.txt
        continue
    fi
    
    # Plasma6 system components (might be meta-packages)
    if [[ "$package" =~ ^plasma6- ]]; then
        echo "$package" >> /tmp/application_packages.txt
        continue
    fi
    
    # Everything else is likely an explicit install
    echo "$package" >> /tmp/explicit_packages.txt
    
done < /tmp/package_names.txt

# Display results
print_section "Library Dependencies (likely auto-installed)"
lib_count=$(wc -l < /tmp/likely_dependencies.txt 2>/dev/null || echo 0)
echo -e "${YELLOW}Count: $lib_count${NC}"
if [[ $lib_count -gt 0 ]]; then
    head -10 /tmp/likely_dependencies.txt
    if [[ $lib_count -gt 10 ]]; then
        echo "... and $((lib_count - 10)) more"
    fi
fi

print_section "System/Base Packages (part of base system)"
sys_count=$(wc -l < /tmp/system_packages.txt 2>/dev/null || echo 0)
echo -e "${YELLOW}Count: $sys_count${NC}"
if [[ $sys_count -gt 0 ]]; then
    head -10 /tmp/system_packages.txt
    if [[ $sys_count -gt 10 ]]; then
        echo "... and $((sys_count - 10)) more"
    fi
fi

print_section "Application Packages (explicit installs needed)"
app_count=$(wc -l < /tmp/application_packages.txt 2>/dev/null || echo 0)
echo -e "${GREEN}Count: $app_count${NC}"
if [[ $app_count -gt 0 ]]; then
    sort /tmp/application_packages.txt
fi

print_section "Other Explicit Packages (likely needed)"
exp_count=$(wc -l < /tmp/explicit_packages.txt 2>/dev/null || echo 0)
echo -e "${GREEN}Count: $exp_count${NC}"
if [[ $exp_count -gt 0 ]]; then
    sort /tmp/explicit_packages.txt
fi

# Create optimized package list
print_section "Creating Optimized Package List"
{
    echo "# OpenMandriva Package List - Optimized"
    echo "# Generated by package analyzer on $(date)"
    echo "# Only explicit packages that won't be auto-installed"
    echo ""
    echo "# === PLASMA DESKTOP COMPONENTS ==="
    if [[ -s /tmp/application_packages.txt ]]; then
        sort /tmp/application_packages.txt | grep -E "^plasma6-"
    fi
    echo ""
    echo "# === APPLICATIONS ==="
    if [[ -s /tmp/explicit_packages.txt ]]; then
        sort /tmp/explicit_packages.txt
    fi
    if [[ -s /tmp/application_packages.txt ]]; then
        sort /tmp/application_packages.txt | grep -v -E "^plasma6-"
    fi
} > packages_optimized.txt

print_header "Analysis Complete"
echo -e "${GREEN}Optimized package list created: packages_optimized.txt${NC}"
echo -e "${YELLOW}Original packages: $total_packages${NC}"
echo -e "${YELLOW}Likely dependencies: $lib_count${NC}"
echo -e "${YELLOW}System packages: $sys_count${NC}"
echo -e "${YELLOW}Recommended explicit installs: $((app_count + exp_count))${NC}"

echo -e "\n${CYAN}Reduction: $((lib_count + sys_count)) packages can likely be removed${NC}"
echo -e "${CYAN}Space saving: ~$((((lib_count + sys_count) * 100) / total_packages))% reduction${NC}"

# Cleanup
rm -f /tmp/package_names.txt /tmp/likely_dependencies.txt /tmp/explicit_packages.txt /tmp/system_packages.txt /tmp/application_packages.txt

echo -e "\n${GREEN}Review packages_optimized.txt and test it before using!${NC}"
